{"version":3,"file":"static/js/142.ec325170.chunk.js","mappings":"qKACA,QAA0B,yBCA1B,EAAyB,4B,aCIGA,EAAAA,UAyD5B,MCpBA,EArCgCC,IAE5B,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAASH,EAAMI,SAE3CE,EAAAA,EAAAA,YAAW,KACPD,EAAUL,EAAMI,OAAO,GACxB,CAACJ,EAAMI,SAYN,OACIG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACMP,IACEQ,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,QAAMC,cAAeA,KAAQR,GAAY,EAAK,EAAGM,SAAEJ,GAAU,WAIpEH,IACGQ,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SAAOE,SApBHC,IACpBP,EAAUO,EAAEC,cAAcC,MAAM,EAmBiBC,WAAS,EAACC,OAjBpCC,KACvBf,GAAY,GACZF,EAAMkB,aAAad,EAAO,EAe6DU,MAAOV,QAGpF,EChBlB,EAhBqBJ,GACZA,EAAMmB,SAMPZ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKW,UAAWC,EAAab,SACxBR,EAAMmB,QAAQG,QAAUtB,EAAMmB,QAAQG,OAAOC,QAASd,EAAAA,EAAAA,KAAA,OAAKe,IAAKxB,EAAMmB,QAAQG,OAAOC,MAAOE,IAAI,QAErGhB,EAAAA,EAAAA,KAACiB,EAAsB,CAACtB,OAAQJ,EAAMI,OAAQc,aAAclB,EAAMkB,mBAT/DT,EAAAA,EAAAA,KAAA,OAAAD,SAAK,e,cCNpB,QAAuB,mBCmBvB,EAhBcR,IAENO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACGC,EAAAA,EAAAA,KAAA,OAAKW,UAAWC,EAAWb,UACtBC,EAAAA,EAAAA,KAAA,OAAKe,IAAI,mKAAmKC,IAAI,GAAGE,OAAO,QAE/LlB,EAAAA,EAAAA,KAAA,OAAAD,SACER,EAAM4B,WAERrB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,UACGR,EAAM6B,iB,4CCLzB,MAAMC,EAAU/B,EAAAA,MAAYC,IACxB,IAAI+B,EAAgB/B,EAAMgC,UAAUC,KAAIC,IAAKzB,EAAAA,EAAAA,KAAC0B,EAAI,CAACP,QAASM,EAAEN,QAASC,WAAYK,EAAEL,eAQrF,OACItB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cAGLC,EAAAA,EAAAA,KAAC2B,EAAqB,CAACC,SAVdC,IACbtC,EAAMuC,QAAQD,EAAOE,YAAY,EASaA,YAAaxC,EAAMwC,eAC7D/B,EAAAA,EAAAA,KAAA,OAAAD,SACKuB,MAEH,IAwBRK,GAAwBK,EAAAA,EAAAA,GAAU,CAAEC,KAAM,yBAAlBD,EAlBRzC,IAEdO,EAAAA,EAAAA,MAAA,QAAM8B,SAAUrC,EAAM2C,aAAanC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CACFC,UAAWC,EAAAA,EACXC,KAAM,cACNjC,MAAOd,EAAMwC,YACbQ,SAAU,CAACC,EAAAA,GAAeC,EAAAA,EAAAA,GAAiB,UAGnDzC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAQxB,ICFA,GAHyB2C,EAAAA,EAAAA,KAfAC,IACd,CACHpB,UAAWoB,EAAMC,YAAYrB,UAC7BQ,YAAaY,EAAMC,YAAYb,gBAIXc,IACjB,CACHf,QAAUC,IACNc,GAASC,EAAAA,EAAAA,IAAqBf,GAAa,KAK9BW,CAA6CrB,GCvBtE,EAnBiB9B,IAITO,EAAAA,EAAAA,MAAA,OAAKa,UAAWC,EAAcb,SAAA,EAK1BC,EAAAA,EAAAA,KAAC+C,EAAW,CAACrC,QAASnB,EAAMmB,QAASf,OAAQJ,EAAMI,OAAQc,aAAclB,EAAMkB,gBAC/ET,EAAAA,EAAAA,KAACgD,EAAgB,CACbC,MAAO1D,EAAM0D,WCoB7B,IAAIC,GAAwBC,E,QAAAA,IA1BF5D,IAEtB,IAAI,GAAE6D,IAAOC,EAAAA,EAAAA,KAiBb,OAhBKD,IACDA,EAAK7D,EAAM+D,iBAENF,GACF7D,EAAMgE,QAAQC,KAAK,YAI1B3D,EAAAA,EAAAA,YAAU,KACNN,EAAMkE,eAAeL,EAAG,GACzB,CAACA,KAEJvD,EAAAA,EAAAA,YAAU,KACNN,EAAMmE,UAAUN,EAAG,GACpB,KAGCpD,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC2D,EAAO,CAACjD,QAASnB,EAAMmB,QAASf,OAAQJ,EAAMI,OAAQc,aAAclB,EAAMkB,gBACzE,IAMd,MAWA,GAAeiC,EAAAA,EAAAA,KAXUC,IAAK,CAC1BjC,QAASiC,EAAMC,YAAYlC,QAC3Ba,UAAWoB,EAAMC,YAAYrB,UAC7BQ,YAAaY,EAAMC,YAAYb,YAC/BpC,OAAQgD,EAAMC,YAAYjD,OAC1B2D,iBAAkBX,EAAMiB,KAAKC,OAC7BC,OAAQnB,EAAMiB,KAAKE,UAKiB,CAAEL,eAAc,KAAEC,UAAS,KAAEjD,aAAa,MAAlF,CAAqFyC,E","sources":["webpack://kamasutra/./src/components/Profile/Profile.module.css?b512","webpack://kamasutra/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://kamasutra/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__-f+CG\",\"avatar\":\"Profile_avatar__dXCWG\"};","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"ProfileInfo_avatar__qzcfL\"};","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        }, () => {\r\n            this.props.updateStatus(this.state.status);\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----\"}</span>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus onBlur={this.deactivateEditMode} value={this.props.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ProfileStatus","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect (() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    \r\n\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={() => { setEditMode(true) }}>{status || \"----\"}</span>\r\n                    </div>\r\n                }\r\n\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode} value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className={style.avatar}>\r\n                {props.profile.photos && props.profile.photos.large && <img src={props.profile.photos.large} alt=\"\" />}\r\n            </div>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__WVAfb\"};","import React from \"react\";\r\nimport style from \"./Post.module.css\";  \r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n           <div className={style.item}>\r\n                <img src=\"https://sun6-20.userapi.com/s/v1/if1/IFjPpkEm081-xeNkBHWhVs9HnmtmBLxh0yB3MpmvuhroVCBPJ5w8aaMXKi7-ooVywyjoIuCE.jpg?size=900x900&quality=96&crop=0,0,900,900&ava=1\" alt=\"\" srcset=\"\" />\r\n           </div>\r\n           <div>\r\n            {props.message}\r\n           </div>\r\n           <div>\r\n           like:  {props.likesCount}\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { requiredField, maxLengthCreator } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../common/FormControls\";\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.postsData.map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n    const addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                My posts\r\n            </div>\r\n            <ProfileAddNewPostForm onSubmit={addPost} newPostText={props.newPostText} />\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n)\r\n\r\n\r\nconst AddPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={'newPostText'}\r\n                    value={props.newPostText}\r\n                    validate={[requiredField, maxLengthCreator(10)]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileAddNewPostForm = reduxForm({ form: 'ProfileAddNewPostForm' })(AddPostsForm)\r\n\r\nexport default MyPosts;","\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../reducers/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n\r\n\r\n//     let state = props.store.getState()\r\n//     const addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n\r\n//     const onChangePost = (text) => {\r\n//         let action = updateNewPostTextActionCreator(text);\r\n//         props.store.dispatch(action);\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <MyPosts\r\n//             updateNewPostText={onChangePost}\r\n//             addPost={addPost}\r\n//             postsData={state.profilePage.postsData}\r\n//             newPostText={state.profilePage.newPostText}\r\n\r\n//         />\r\n//     );\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            {/* <div>\r\n                <img src=\"https://it-butik.ru/uploads/images/blog/2023-02-18/VHrnvwULjsSnqM861bSoUZrVCRdDaDzDTzi8ysAj.jpg\" alt=\"\" srcset=\"\" />\r\n            </div> */}\r\n            \r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer\r\n                store={props.store} \r\n                \r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile;","\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport { getStatus, getUserProfile, updateStatus } from \"../../reducers/profileReducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\"\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    let { id } = useParams();\r\n    if (!id) {\r\n        id = props.autherizedUserId\r\n\r\n        if (!id) {\r\n           props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.getUserProfile(id);\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        props.getStatus(id);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Profile profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n    );\r\n};\r\n\r\nlet AuthRiderectComponent = withAuthRedirect(ProfileContainer)\r\n//ниже отправка куда??\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText,\r\n    status: state.profilePage.status,\r\n    autherizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getUserProfile, getStatus, updateStatus })(AuthRiderectComponent);"],"names":["React","props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","profile","className","style","photos","large","src","alt","ProfileStatusWithHooks","srcset","message","likesCount","MyPosts","postsElements","postsData","map","p","Post","ProfileAddNewPostForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","requiredField","maxLengthCreator","connect","state","profilePage","dispatch","addPostActionCreator","ProfileInfo","MyPostsContainer","store","AuthRiderectComponent","withAuthRedirect","id","useParams","autherizedUserId","history","push","getUserProfile","getStatus","Profile","auth","userId","isAuth"],"sourceRoot":""}